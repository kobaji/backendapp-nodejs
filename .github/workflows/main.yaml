# GitHub Actionsの名前
name: github-actions-first

on:
#   実行のトリガーとなるアクション（push,pr）のmainブランチで実行
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }} 
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
  AWS_DEFAULT_REGION: ap-northeast-1


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # 実行される処理の単位（日本語はダメ）
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # ソースコードをチェックアウトする（/home/runner/work/backendapp-nodejs/backendapp-nodejs）
      # actions/checkout@v2はここ（https://github.com/actions/checkout）
      - name: Checkout
        uses: actions/checkout@v2
        # 環境変数に追加される
        # secretsはGitHubのSettings⇒Secrets⇒ripository Secretから設定可能
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ap-northeast-1

      # Runs a single command using the runners shell
      # id⇒参照時に利用　name⇒表示目的
      - name: スクリプト1 # 日本語OK
        id: aaaa
        run: aws s3 ls
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          DOCKER_BUILDKIT: 1
          ECR_REGISTRY: 831318551697.dkr.ecr.ap-northeast-1.amazonaws.com
          ECR_REPOSITORY: kenta-dev
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # latest と github.sha でタグをふる場合
          docker build \
              --cache-from=$ECR_REGISTRY/$ECR_REPOSITORY:latest --build-arg BUILDKIT_INLINE_CACHE=1 \
              -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"